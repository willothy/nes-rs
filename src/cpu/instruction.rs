use crate::cpu::opcode;

use super::{addr_mode::AddrMode, OLC6502};


pub struct Instruction {
    pub name: String,
    pub opcode: fn(&mut OLC6502) -> u8,
    pub addr_mode: AddrMode,
    pub cycles: u8,
    pub len: u8,
}

impl std::fmt::Debug for Instruction {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
        writeln!(f, "Name: {}", self.name)?;
        writeln!(f, "Mode: {}", self.addr_mode)?;
        writeln!(f, "Cycles: {}", self.cycles)?;
        write!(f, "Len: {}", self.len)
    }
}

impl From<u8> for Instruction {
    fn from(opcode: u8) -> Self {
        use AddrMode::*;
        match opcode {
            0x00 => Instruction {
                name: "BRK".to_owned(),
                opcode: opcode::brk,
                addr_mode: AddrMode::IMP,
                cycles: 7,
                len: 1,
            },
            0xEA => Instruction {
                name: "NOP".to_owned(),
                opcode: opcode::nop,
                addr_mode: AddrMode::IMP,
                cycles: 2,
                len: 1,
            },

            // Arithmetic

            // Add
            0x69 => Instruction {
                name: "ADC".to_owned(),
                opcode: opcode::adc,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0x65 => Instruction {
                name: "ADC".to_owned(),
                opcode: opcode::adc,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0x75 => Instruction {
                name: "ADC".to_owned(),
                opcode: opcode::adc,
                addr_mode: ZPX,
                cycles: 4,
                len: 2,
            },
            0x6D => Instruction {
                name: "ADC".to_owned(),
                opcode: opcode::adc,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0x7D => Instruction {
                name: "ADC".to_owned(),
                opcode: opcode::adc,
                addr_mode: ABX,
                cycles: 4,
                len: 3,
            },
            0x79 => Instruction {
                name: "ADC".to_owned(),
                opcode: opcode::adc,
                addr_mode: ABY,
                cycles: 4,
                len: 3,
            },
            0x61 => Instruction {
                name: "ADC".to_owned(),
                opcode: opcode::adc,
                addr_mode: IZX,
                cycles: 6,
                len: 2,
            },
            0x71 => Instruction {
                name: "ADC".to_owned(),
                opcode: opcode::adc,
                addr_mode: IZY,
                cycles: 5,
                len: 2,
            },

            // Subtract
            0xE9 => Instruction {
                name: "SBC".to_owned(),
                opcode: opcode::sbc,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0xE5 => Instruction {
                name: "SBC".to_owned(),
                opcode: opcode::sbc,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0xF5 => Instruction {
                name: "SBC".to_owned(),
                opcode: opcode::sbc,
                addr_mode: ZPX,
                cycles: 4,
                len: 2,
            },
            0xED => Instruction {
                name: "SBC".to_owned(),
                opcode: opcode::sbc,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0xFD => Instruction {
                name: "SBC".to_owned(),
                opcode: opcode::sbc,
                addr_mode: ABX,
                cycles: 4,
                len: 3,
            },
            0xF9 => Instruction {
                name: "SBC".to_owned(),
                opcode: opcode::sbc,
                addr_mode: ABY,
                cycles: 4,
                len: 3,
            },
            0xE1 => Instruction {
                name: "SBC".to_owned(),
                opcode: opcode::sbc,
                addr_mode: IZX,
                cycles: 6,
                len: 2,
            },
            0xF1 => Instruction {
                name: "SBC".to_owned(),
                opcode: opcode::sbc,
                addr_mode: IZY,
                cycles: 5,
                len: 2,
            },

            // Bitwise AND
            0x29 => Instruction {
                name: "AND".to_owned(),
                opcode: opcode::and,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0x25 => Instruction {
                name: "AND".to_owned(),
                opcode: opcode::and,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0x35 => Instruction {
                name: "AND".to_owned(),
                opcode: opcode::and,
                addr_mode: ZPX,
                cycles: 4,
                len: 2,
            },
            0x2D => Instruction {
                name: "AND".to_owned(),
                opcode: opcode::and,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0x3D => Instruction {
                name: "AND".to_owned(),
                opcode: opcode::and,
                addr_mode: ABX,
                cycles: 4,
                len: 3,
            },
            0x39 => Instruction {
                name: "AND".to_owned(),
                opcode: opcode::and,
                addr_mode: ABY,
                cycles: 4,
                len: 3,
            },
            0x21 => Instruction {
                name: "AND".to_owned(),
                opcode: opcode::and,
                addr_mode: IZX,
                cycles: 6,
                len: 2,
            },
            0x31 => Instruction {
                name: "AND".to_owned(),
                opcode: opcode::and,
                addr_mode: IZY,
                cycles: 5,
                len: 2,
            },

            // Bitwise OR
            0x09 => Instruction {
                name: "ORA".to_owned(),
                opcode: opcode::ora,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0x05 => Instruction {
                name: "ORA".to_owned(),
                opcode: opcode::ora,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0x15 => Instruction {
                name: "ORA".to_owned(),
                opcode: opcode::ora,
                addr_mode: ZPX,
                cycles: 4,
                len: 2,
            },
            0x0D => Instruction {
                name: "ORA".to_owned(),
                opcode: opcode::ora,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0x1D => Instruction {
                name: "ORA".to_owned(),
                opcode: opcode::ora,
                addr_mode: ABX,
                cycles: 4,
                len: 3,
            },
            0x19 => Instruction {
                name: "ORA".to_owned(),
                opcode: opcode::ora,
                addr_mode: ABY,
                cycles: 4,
                len: 3,
            },
            0x01 => Instruction {
                name: "ORA".to_owned(),
                opcode: opcode::ora,
                addr_mode: IZX,
                cycles: 6,
                len: 2,
            },
            0x11 => Instruction {
                name: "ORA".to_owned(),
                opcode: opcode::ora,
                addr_mode: IZY,
                cycles: 5,
                len: 2,
            },

            // Bitwise XOR
            0x49 => Instruction {
                name: "EOR".to_owned(),
                opcode: opcode::eor,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0x45 => Instruction {
                name: "EOR".to_owned(),
                opcode: opcode::eor,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0x55 => Instruction {
                name: "EOR".to_owned(),
                opcode: opcode::eor,
                addr_mode: ZPX,
                cycles: 4,
                len: 2,
            },
            0x4D => Instruction {
                name: "EOR".to_owned(),
                opcode: opcode::eor,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0x5D => Instruction {
                name: "EOR".to_owned(),
                opcode: opcode::eor,
                addr_mode: ABX,
                cycles: 4,
                len: 3,
            },
            0x59 => Instruction {
                name: "EOR".to_owned(),
                opcode: opcode::eor,
                addr_mode: ABY,
                cycles: 4,
                len: 3,
            },
            0x41 => Instruction {
                name: "EOR".to_owned(),
                opcode: opcode::eor,
                addr_mode: IZX,
                cycles: 6,
                len: 2,
            },
            0x51 => Instruction {
                name: "EOR".to_owned(),
                opcode: opcode::eor,
                addr_mode: IZY,
                cycles: 5,
                len: 2,
            },

            // Bitwise Compare
            0xC9 => Instruction {
                name: "CMP".to_owned(),
                opcode: opcode::cmp,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0xC5 => Instruction {
                name: "CMP".to_owned(),
                opcode: opcode::cmp,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0xD5 => Instruction {
                name: "CMP".to_owned(),
                opcode: opcode::cmp,
                addr_mode: ZPX,
                cycles: 4,
                len: 2,
            },
            0xCD => Instruction {
                name: "CMP".to_owned(),
                opcode: opcode::cmp,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0xDD => Instruction {
                name: "CMP".to_owned(),
                opcode: opcode::cmp,
                addr_mode: ABX,
                cycles: 4,
                len: 3,
            },
            0xD9 => Instruction {
                name: "CMP".to_owned(),
                opcode: opcode::cmp,
                addr_mode: ABY,
                cycles: 4,
                len: 3,
            },
            0xC1 => Instruction {
                name: "CMP".to_owned(),
                opcode: opcode::cmp,
                addr_mode: IZX,
                cycles: 6,
                len: 2,
            },
            0xD1 => Instruction {
                name: "CMP".to_owned(),
                opcode: opcode::cmp,
                addr_mode: IZY,
                cycles: 5,
                len: 2,
            },

            // Bitwise Compare with accumulator
            0xE0 => Instruction {
                name: "CPX".to_owned(),
                opcode: opcode::cpx,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0xE4 => Instruction {
                name: "CPX".to_owned(),
                opcode: opcode::cpx,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0xEC => Instruction {
                name: "CPX".to_owned(),
                opcode: opcode::cpx,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0xC0 => Instruction {
                name: "CPY".to_owned(),
                opcode: opcode::cpy,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0xC4 => Instruction {
                name: "CPY".to_owned(),
                opcode: opcode::cpy,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0xCC => Instruction {
                name: "CPY".to_owned(),
                opcode: opcode::cpy,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },

            // Shifts
            0x2A => Instruction {
                name: "ROL".to_owned(),
                opcode: opcode::rol,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0x26 => Instruction {
                name: "ROL".to_owned(),
                opcode: opcode::rol,
                addr_mode: ZP0,
                cycles: 5,
                len: 2,
            },
            0x36 => Instruction {
                name: "ROL".to_owned(),
                opcode: opcode::rol,
                addr_mode: ZPX,
                cycles: 6,
                len: 2,
            },
            0x2E => Instruction {
                name: "ROL".to_owned(),
                opcode: opcode::rol,
                addr_mode: ABS,
                cycles: 6,
                len: 3,
            },
            0x3E => Instruction {
                name: "ROL".to_owned(),
                opcode: opcode::rol,
                addr_mode: ABX,
                cycles: 7,
                len: 3,
            },

            0x6A => Instruction {
                name: "ROR".to_owned(),
                opcode: opcode::ror,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0x66 => Instruction {
                name: "ROR".to_owned(),
                opcode: opcode::ror,
                addr_mode: ZP0,
                cycles: 5,
                len: 2,
            },
            0x76 => Instruction {
                name: "ROR".to_owned(),
                opcode: opcode::ror,
                addr_mode: ZPX,
                cycles: 6,
                len: 2,
            },
            0x6E => Instruction {
                name: "ROR".to_owned(),
                opcode: opcode::ror,
                addr_mode: ABS,
                cycles: 6,
                len: 3,
            },
            0x7E => Instruction {
                name: "ROR".to_owned(),
                opcode: opcode::ror,
                addr_mode: ABX,
                cycles: 7,
                len: 3,
            },

            // Increment/Decrement
            0xE6 => Instruction {
                name: "INC".to_owned(),
                opcode: opcode::inc,
                addr_mode: ZP0,
                cycles: 5,
                len: 2,
            },
            0xF6 => Instruction {
                name: "INC".to_owned(),
                opcode: opcode::inc,
                addr_mode: ZPX,
                cycles: 6,
                len: 2,
            },
            0xEE => Instruction {
                name: "INC".to_owned(),
                opcode: opcode::inc,
                addr_mode: ABS,
                cycles: 6,
                len: 3,
            },
            0xFE => Instruction {
                name: "INC".to_owned(),
                opcode: opcode::inc,
                addr_mode: ABX,
                cycles: 7,
                len: 3,
            },
            0xC6 => Instruction {
                name: "DEC".to_owned(),
                opcode: opcode::dec,
                addr_mode: ZP0,
                cycles: 5,
                len: 2,
            },
            0xD6 => Instruction {
                name: "DEC".to_owned(),
                opcode: opcode::dec,
                addr_mode: ZPX,
                cycles: 6,
                len: 2,
            },
            0xCE => Instruction {
                name: "DEC".to_owned(),
                opcode: opcode::dec,
                addr_mode: ABS,
                cycles: 6,
                len: 3,
            },
            0xDE => Instruction {
                name: "DEC".to_owned(),
                opcode: opcode::dec,
                addr_mode: ABX,
                cycles: 7,
                len: 3,
            },

            // Increment/Decrement
            0xE8 => Instruction {
                name: "INX".to_owned(),
                opcode: opcode::inx,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0xC8 => Instruction {
                name: "INY".to_owned(),
                opcode: opcode::iny,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },

            0xCA => Instruction {
                name: "DEX".to_owned(),
                opcode: opcode::dex,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0x88 => Instruction {
                name: "DEY".to_owned(),
                opcode: opcode::dey,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },

            // Branching
            0x10 => Instruction {
                name: "BPL".to_owned(),
                opcode: opcode::bpl,
                addr_mode: REL,
                cycles: 2,
                len: 2,
            },
            0x30 => Instruction {
                name: "BMI".to_owned(),
                opcode: opcode::bmi,
                addr_mode: REL,
                cycles: 2,
                len: 2,
            },
            0x50 => Instruction {
                name: "BVC".to_owned(),
                opcode: opcode::bvc,
                addr_mode: REL,
                cycles: 2,
                len: 2,
            },
            0x70 => Instruction {
                name: "BVS".to_owned(),
                opcode: opcode::bvs,
                addr_mode: REL,
                cycles: 2,
                len: 2,
            },
            0x90 => Instruction {
                name: "BCC".to_owned(),
                opcode: opcode::bcc,
                addr_mode: REL,
                cycles: 2,
                len: 2,
            },
            0xB0 => Instruction {
                name: "BCS".to_owned(),
                opcode: opcode::bcs,
                addr_mode: REL,
                cycles: 2,
                len: 2,
            },
            0xD0 => Instruction {
                name: "BNE".to_owned(),
                opcode: opcode::bne,
                addr_mode: REL,
                cycles: 2,
                len: 2,
            },
            0xF0 => Instruction {
                name: "BEQ".to_owned(),
                opcode: opcode::beq,
                addr_mode: REL,
                cycles: 2,
                len: 2,
            },

            0x24 => Instruction {
                name: "BIT".to_owned(),
                opcode: opcode::bit,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0x2C => Instruction {
                name: "BIT".to_owned(),
                opcode: opcode::bit,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },

            // Jumps/Calls/Returns
            0x20 => Instruction {
                name: "JSR".to_owned(),
                opcode: opcode::jsr,
                addr_mode: ABS,
                cycles: 6,
                len: 3,
            },
            0x60 => Instruction {
                name: "RTS".to_owned(),
                opcode: opcode::rts,
                addr_mode: IMP,
                cycles: 6,
                len: 1,
            },
            0x40 => Instruction {
                name: "RTI".to_owned(),
                opcode: opcode::rti,
                addr_mode: IMP,
                cycles: 6,
                len: 1,
            },
            0x4C => Instruction {
                name: "JMP".to_owned(),
                opcode: opcode::jmp,
                addr_mode: IMM,
                cycles: 3,
                len: 3,
            },
            0x6C => Instruction {
                name: "JMP".to_owned(),
                opcode: opcode::jmp,
                addr_mode: IND,
                cycles: 5,
                len: 3,
            },
            
            // Stack
            0x08 => Instruction {
                name: "PHP".to_owned(),
                opcode: opcode::php,
                addr_mode: IMP,
                cycles: 3,
                len: 1,
            },
            0x28 => Instruction {
                name: "PLP".to_owned(),
                opcode: opcode::plp,
                addr_mode: IMP,
                cycles: 4,
                len: 1,
            },
            0x48 => Instruction {
                name: "PHA".to_owned(),
                opcode: opcode::pha,
                addr_mode: IMP,
                cycles: 3,
                len: 1,
            },
            0x68 => Instruction {
                name: "PLA".to_owned(),
                opcode: opcode::pla,
                addr_mode: IMP,
                cycles: 4,
                len: 1,
            },

            // Flags
            0x9A => Instruction {
                name: "TXS".to_owned(),
                opcode: opcode::txs,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0xBA => Instruction {
                name: "TSX".to_owned(),
                opcode: opcode::tsx,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0x8A => Instruction {
                name: "TXA".to_owned(),
                opcode: opcode::txa,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0xAA => Instruction {
                name: "TAX".to_owned(),
                opcode: opcode::tax,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0xA8 => Instruction {
                name: "TAY".to_owned(),
                opcode: opcode::tay,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0x98 => Instruction {
                name: "TYA".to_owned(),
                opcode: opcode::tya,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },

            0xD8 => Instruction {
                name: "CLD".to_owned(),
                opcode: opcode::cld,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0x58 => Instruction {
                name: "CLI".to_owned(),
                opcode: opcode::cli,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0xB8 => Instruction {
                name: "CLV".to_owned(),
                opcode: opcode::clv,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0x38 => Instruction {
                name: "SEC".to_owned(),
                opcode: opcode::sec,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0xF8 => Instruction {
                name: "SED".to_owned(),
                opcode: opcode::sed,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0x78 => Instruction {
                name: "SEI".to_owned(),
                opcode: opcode::sei,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            0x18 => Instruction {
                name: "CLC".to_owned(),
                opcode: opcode::clc,
                addr_mode: IMP,
                cycles: 2,
                len: 1,
            },
            
            // Loads and Stores
            0xA9 => Instruction {
                name: "LDA".to_owned(),
                opcode: opcode::lda,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0xA5 => Instruction {
                name: "LDA".to_owned(),
                opcode: opcode::lda,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0xB5 => Instruction {
                name: "LDA".to_owned(),
                opcode: opcode::lda,
                addr_mode: ZPX,
                cycles: 4,
                len: 2,
            },
            0xAD => Instruction {
                name: "LDA".to_owned(),
                opcode: opcode::lda,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0xBD => Instruction {
                name: "LDA".to_owned(),
                opcode: opcode::lda,
                addr_mode: ABX,
                cycles: 4,
                len: 3,
            },
            0xB9 => Instruction {
                name: "LDA".to_owned(),
                opcode: opcode::lda,
                addr_mode: ABY,
                cycles: 4,
                len: 3,
            },
            0xA1 => Instruction {
                name: "LDA".to_owned(),
                opcode: opcode::lda,
                addr_mode: IZX,
                cycles: 6,
                len: 2,
            },
            0xB1 => Instruction {
                name: "LDA".to_owned(),
                opcode: opcode::lda,
                addr_mode: IZY,
                cycles: 5,
                len: 2,
            },
            0xA2 => Instruction {
                name: "LDX".to_owned(),
                opcode: opcode::ldx,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0xA6 => Instruction {
                name: "LDX".to_owned(),
                opcode: opcode::ldx,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0xB6 => Instruction {
                name: "LDX".to_owned(),
                opcode: opcode::ldx,
                addr_mode: ZPY,
                cycles: 4,
                len: 2,
            },
            0xAE => Instruction {
                name: "LDX".to_owned(),
                opcode: opcode::ldx,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0xBE => Instruction {
                name: "LDX".to_owned(),
                opcode: opcode::ldx,
                addr_mode: ABY,
                cycles: 4,
                len: 3,
            },
            0xA0 => Instruction {
                name: "LDY".to_owned(),
                opcode: opcode::ldy,
                addr_mode: IMM,
                cycles: 2,
                len: 2,
            },
            0xA4 => Instruction {
                name: "LDY".to_owned(),
                opcode: opcode::ldy,
                addr_mode: ZP0,
                cycles: 3,
                len: 2,
            },
            0xB4 => Instruction {
                name: "LDY".to_owned(),
                opcode: opcode::ldy,
                addr_mode: ZPX,
                cycles: 4,
                len: 2,
            },
            0xAC => Instruction {
                name: "LDY".to_owned(),
                opcode: opcode::ldy,
                addr_mode: ABS,
                cycles: 4,
                len: 3,
            },
            0xBC => Instruction {
                name: "LDY".to_owned(),
                opcode: opcode::ldy,
                addr_mode: ABX,
                cycles: 4,
                len: 3,
            },

            _ => Instruction {
                name: "Illegal".to_owned(),
                opcode: |_|{0},
                addr_mode: IMM,
                cycles: 0,
                len: 1
            },
        }
    }
}